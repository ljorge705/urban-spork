package com.google.android.gms.internal.mlkit_vision_barcode;

import com.google.firebase.encoders.FieldDescriptor;
import com.google.firebase.encoders.ObjectEncoder;
import com.google.firebase.encoders.ObjectEncoderContext;
import java.io.IOException;

/* compiled from: com.google.android.gms:play-services-mlkit-barcode-scanning@@18.0.0 */
/* loaded from: classes3.dex */
final class zzgx implements ObjectEncoder {
    private static final FieldDescriptor zzA;
    private static final FieldDescriptor zzB;
    private static final FieldDescriptor zzC;
    private static final FieldDescriptor zzD;
    private static final FieldDescriptor zzE;
    private static final FieldDescriptor zzF;
    private static final FieldDescriptor zzG;
    private static final FieldDescriptor zzH;
    private static final FieldDescriptor zzI;
    private static final FieldDescriptor zzJ;
    private static final FieldDescriptor zzK;
    private static final FieldDescriptor zzL;
    private static final FieldDescriptor zzM;
    private static final FieldDescriptor zzN;
    private static final FieldDescriptor zzO;
    private static final FieldDescriptor zzP;
    private static final FieldDescriptor zzQ;
    private static final FieldDescriptor zzR;
    private static final FieldDescriptor zzS;
    private static final FieldDescriptor zzT;
    private static final FieldDescriptor zzU;
    private static final FieldDescriptor zzV;
    private static final FieldDescriptor zzW;
    private static final FieldDescriptor zzX;
    private static final FieldDescriptor zzY;
    private static final FieldDescriptor zzZ;
    static final zzgx zza = new zzgx();
    private static final FieldDescriptor zzaa;
    private static final FieldDescriptor zzab;
    private static final FieldDescriptor zzac;
    private static final FieldDescriptor zzad;
    private static final FieldDescriptor zzae;
    private static final FieldDescriptor zzaf;
    private static final FieldDescriptor zzag;
    private static final FieldDescriptor zzah;
    private static final FieldDescriptor zzai;
    private static final FieldDescriptor zzaj;
    private static final FieldDescriptor zzak;
    private static final FieldDescriptor zzal;
    private static final FieldDescriptor zzam;
    private static final FieldDescriptor zzan;
    private static final FieldDescriptor zzao;
    private static final FieldDescriptor zzb;
    private static final FieldDescriptor zzc;
    private static final FieldDescriptor zzd;
    private static final FieldDescriptor zze;
    private static final FieldDescriptor zzf;
    private static final FieldDescriptor zzg;
    private static final FieldDescriptor zzh;
    private static final FieldDescriptor zzi;
    private static final FieldDescriptor zzj;
    private static final FieldDescriptor zzk;
    private static final FieldDescriptor zzl;
    private static final FieldDescriptor zzm;
    private static final FieldDescriptor zzn;
    private static final FieldDescriptor zzo;
    private static final FieldDescriptor zzp;
    private static final FieldDescriptor zzq;
    private static final FieldDescriptor zzr;
    private static final FieldDescriptor zzs;
    private static final FieldDescriptor zzt;
    private static final FieldDescriptor zzu;
    private static final FieldDescriptor zzv;
    private static final FieldDescriptor zzw;
    private static final FieldDescriptor zzx;
    private static final FieldDescriptor zzy;
    private static final FieldDescriptor zzz;

    static {
        FieldDescriptor.Builder builder = FieldDescriptor.builder("systemInfo");
        zzdf zzdfVar = new zzdf();
        zzdfVar.zza(1);
        zzb = builder.withProperty(zzdfVar.zzb()).build();
        FieldDescriptor.Builder builder2 = FieldDescriptor.builder("eventName");
        zzdf zzdfVar2 = new zzdf();
        zzdfVar2.zza(2);
        zzc = builder2.withProperty(zzdfVar2.zzb()).build();
        FieldDescriptor.Builder builder3 = FieldDescriptor.builder("isThickClient");
        zzdf zzdfVar3 = new zzdf();
        zzdfVar3.zza(37);
        zzd = builder3.withProperty(zzdfVar3.zzb()).build();
        FieldDescriptor.Builder builder4 = FieldDescriptor.builder("clientType");
        zzdf zzdfVar4 = new zzdf();
        zzdfVar4.zza(61);
        zze = builder4.withProperty(zzdfVar4.zzb()).build();
        FieldDescriptor.Builder builder5 = FieldDescriptor.builder("modelDownloadLogEvent");
        zzdf zzdfVar5 = new zzdf();
        zzdfVar5.zza(3);
        zzf = builder5.withProperty(zzdfVar5.zzb()).build();
        FieldDescriptor.Builder builder6 = FieldDescriptor.builder("customModelLoadLogEvent");
        zzdf zzdfVar6 = new zzdf();
        zzdfVar6.zza(20);
        zzg = builder6.withProperty(zzdfVar6.zzb()).build();
        FieldDescriptor.Builder builder7 = FieldDescriptor.builder("customModelInferenceLogEvent");
        zzdf zzdfVar7 = new zzdf();
        zzdfVar7.zza(4);
        zzh = builder7.withProperty(zzdfVar7.zzb()).build();
        FieldDescriptor.Builder builder8 = FieldDescriptor.builder("customModelCreateLogEvent");
        zzdf zzdfVar8 = new zzdf();
        zzdfVar8.zza(29);
        zzi = builder8.withProperty(zzdfVar8.zzb()).build();
        FieldDescriptor.Builder builder9 = FieldDescriptor.builder("onDeviceFaceDetectionLogEvent");
        zzdf zzdfVar9 = new zzdf();
        zzdfVar9.zza(5);
        zzj = builder9.withProperty(zzdfVar9.zzb()).build();
        FieldDescriptor.Builder builder10 = FieldDescriptor.builder("onDeviceFaceLoadLogEvent");
        zzdf zzdfVar10 = new zzdf();
        zzdfVar10.zza(59);
        zzk = builder10.withProperty(zzdfVar10.zzb()).build();
        FieldDescriptor.Builder builder11 = FieldDescriptor.builder("onDeviceTextDetectionLogEvent");
        zzdf zzdfVar11 = new zzdf();
        zzdfVar11.zza(6);
        zzl = builder11.withProperty(zzdfVar11.zzb()).build();
        FieldDescriptor.Builder builder12 = FieldDescriptor.builder("onDeviceBarcodeDetectionLogEvent");
        zzdf zzdfVar12 = new zzdf();
        zzdfVar12.zza(7);
        zzm = builder12.withProperty(zzdfVar12.zzb()).build();
        FieldDescriptor.Builder builder13 = FieldDescriptor.builder("onDeviceBarcodeLoadLogEvent");
        zzdf zzdfVar13 = new zzdf();
        zzdfVar13.zza(58);
        zzn = builder13.withProperty(zzdfVar13.zzb()).build();
        FieldDescriptor.Builder builder14 = FieldDescriptor.builder("onDeviceImageLabelCreateLogEvent");
        zzdf zzdfVar14 = new zzdf();
        zzdfVar14.zza(48);
        zzo = builder14.withProperty(zzdfVar14.zzb()).build();
        FieldDescriptor.Builder builder15 = FieldDescriptor.builder("onDeviceImageLabelLoadLogEvent");
        zzdf zzdfVar15 = new zzdf();
        zzdfVar15.zza(49);
        zzp = builder15.withProperty(zzdfVar15.zzb()).build();
        FieldDescriptor.Builder builder16 = FieldDescriptor.builder("onDeviceImageLabelDetectionLogEvent");
        zzdf zzdfVar16 = new zzdf();
        zzdfVar16.zza(18);
        zzq = builder16.withProperty(zzdfVar16.zzb()).build();
        FieldDescriptor.Builder builder17 = FieldDescriptor.builder("onDeviceObjectCreateLogEvent");
        zzdf zzdfVar17 = new zzdf();
        zzdfVar17.zza(26);
        zzr = builder17.withProperty(zzdfVar17.zzb()).build();
        FieldDescriptor.Builder builder18 = FieldDescriptor.builder("onDeviceObjectLoadLogEvent");
        zzdf zzdfVar18 = new zzdf();
        zzdfVar18.zza(27);
        zzs = builder18.withProperty(zzdfVar18.zzb()).build();
        FieldDescriptor.Builder builder19 = FieldDescriptor.builder("onDeviceObjectInferenceLogEvent");
        zzdf zzdfVar19 = new zzdf();
        zzdfVar19.zza(28);
        zzt = builder19.withProperty(zzdfVar19.zzb()).build();
        FieldDescriptor.Builder builder20 = FieldDescriptor.builder("onDevicePoseDetectionLogEvent");
        zzdf zzdfVar20 = new zzdf();
        zzdfVar20.zza(44);
        zzu = builder20.withProperty(zzdfVar20.zzb()).build();
        FieldDescriptor.Builder builder21 = FieldDescriptor.builder("onDeviceSegmentationLogEvent");
        zzdf zzdfVar21 = new zzdf();
        zzdfVar21.zza(45);
        zzv = builder21.withProperty(zzdfVar21.zzb()).build();
        FieldDescriptor.Builder builder22 = FieldDescriptor.builder("onDeviceSmartReplyLogEvent");
        zzdf zzdfVar22 = new zzdf();
        zzdfVar22.zza(19);
        zzw = builder22.withProperty(zzdfVar22.zzb()).build();
        FieldDescriptor.Builder builder23 = FieldDescriptor.builder("onDeviceLanguageIdentificationLogEvent");
        zzdf zzdfVar23 = new zzdf();
        zzdfVar23.zza(21);
        zzx = builder23.withProperty(zzdfVar23.zzb()).build();
        FieldDescriptor.Builder builder24 = FieldDescriptor.builder("onDeviceTranslationLogEvent");
        zzdf zzdfVar24 = new zzdf();
        zzdfVar24.zza(22);
        zzy = builder24.withProperty(zzdfVar24.zzb()).build();
        FieldDescriptor.Builder builder25 = FieldDescriptor.builder("cloudFaceDetectionLogEvent");
        zzdf zzdfVar25 = new zzdf();
        zzdfVar25.zza(8);
        zzz = builder25.withProperty(zzdfVar25.zzb()).build();
        FieldDescriptor.Builder builder26 = FieldDescriptor.builder("cloudCropHintDetectionLogEvent");
        zzdf zzdfVar26 = new zzdf();
        zzdfVar26.zza(9);
        zzA = builder26.withProperty(zzdfVar26.zzb()).build();
        FieldDescriptor.Builder builder27 = FieldDescriptor.builder("cloudDocumentTextDetectionLogEvent");
        zzdf zzdfVar27 = new zzdf();
        zzdfVar27.zza(10);
        zzB = builder27.withProperty(zzdfVar27.zzb()).build();
        FieldDescriptor.Builder builder28 = FieldDescriptor.builder("cloudImagePropertiesDetectionLogEvent");
        zzdf zzdfVar28 = new zzdf();
        zzdfVar28.zza(11);
        zzC = builder28.withProperty(zzdfVar28.zzb()).build();
        FieldDescriptor.Builder builder29 = FieldDescriptor.builder("cloudImageLabelDetectionLogEvent");
        zzdf zzdfVar29 = new zzdf();
        zzdfVar29.zza(12);
        zzD = builder29.withProperty(zzdfVar29.zzb()).build();
        FieldDescriptor.Builder builder30 = FieldDescriptor.builder("cloudLandmarkDetectionLogEvent");
        zzdf zzdfVar30 = new zzdf();
        zzdfVar30.zza(13);
        zzE = builder30.withProperty(zzdfVar30.zzb()).build();
        FieldDescriptor.Builder builder31 = FieldDescriptor.builder("cloudLogoDetectionLogEvent");
        zzdf zzdfVar31 = new zzdf();
        zzdfVar31.zza(14);
        zzF = builder31.withProperty(zzdfVar31.zzb()).build();
        FieldDescriptor.Builder builder32 = FieldDescriptor.builder("cloudSafeSearchDetectionLogEvent");
        zzdf zzdfVar32 = new zzdf();
        zzdfVar32.zza(15);
        zzG = builder32.withProperty(zzdfVar32.zzb()).build();
        FieldDescriptor.Builder builder33 = FieldDescriptor.builder("cloudTextDetectionLogEvent");
        zzdf zzdfVar33 = new zzdf();
        zzdfVar33.zza(16);
        zzH = builder33.withProperty(zzdfVar33.zzb()).build();
        FieldDescriptor.Builder builder34 = FieldDescriptor.builder("cloudWebSearchDetectionLogEvent");
        zzdf zzdfVar34 = new zzdf();
        zzdfVar34.zza(17);
        zzI = builder34.withProperty(zzdfVar34.zzb()).build();
        FieldDescriptor.Builder builder35 = FieldDescriptor.builder("automlImageLabelingCreateLogEvent");
        zzdf zzdfVar35 = new zzdf();
        zzdfVar35.zza(23);
        zzJ = builder35.withProperty(zzdfVar35.zzb()).build();
        FieldDescriptor.Builder builder36 = FieldDescriptor.builder("automlImageLabelingLoadLogEvent");
        zzdf zzdfVar36 = new zzdf();
        zzdfVar36.zza(24);
        zzK = builder36.withProperty(zzdfVar36.zzb()).build();
        FieldDescriptor.Builder builder37 = FieldDescriptor.builder("automlImageLabelingInferenceLogEvent");
        zzdf zzdfVar37 = new zzdf();
        zzdfVar37.zza(25);
        zzL = builder37.withProperty(zzdfVar37.zzb()).build();
        FieldDescriptor.Builder builder38 = FieldDescriptor.builder("isModelDownloadedLogEvent");
        zzdf zzdfVar38 = new zzdf();
        zzdfVar38.zza(39);
        zzM = builder38.withProperty(zzdfVar38.zzb()).build();
        FieldDescriptor.Builder builder39 = FieldDescriptor.builder("deleteModelLogEvent");
        zzdf zzdfVar39 = new zzdf();
        zzdfVar39.zza(40);
        zzN = builder39.withProperty(zzdfVar39.zzb()).build();
        FieldDescriptor.Builder builder40 = FieldDescriptor.builder("aggregatedAutomlImageLabelingInferenceLogEvent");
        zzdf zzdfVar40 = new zzdf();
        zzdfVar40.zza(30);
        zzO = builder40.withProperty(zzdfVar40.zzb()).build();
        FieldDescriptor.Builder builder41 = FieldDescriptor.builder("aggregatedCustomModelInferenceLogEvent");
        zzdf zzdfVar41 = new zzdf();
        zzdfVar41.zza(31);
        zzP = builder41.withProperty(zzdfVar41.zzb()).build();
        FieldDescriptor.Builder builder42 = FieldDescriptor.builder("aggregatedOnDeviceFaceDetectionLogEvent");
        zzdf zzdfVar42 = new zzdf();
        zzdfVar42.zza(32);
        zzQ = builder42.withProperty(zzdfVar42.zzb()).build();
        FieldDescriptor.Builder builder43 = FieldDescriptor.builder("aggregatedOnDeviceBarcodeDetectionLogEvent");
        zzdf zzdfVar43 = new zzdf();
        zzdfVar43.zza(33);
        zzR = builder43.withProperty(zzdfVar43.zzb()).build();
        FieldDescriptor.Builder builder44 = FieldDescriptor.builder("aggregatedOnDeviceImageLabelDetectionLogEvent");
        zzdf zzdfVar44 = new zzdf();
        zzdfVar44.zza(34);
        zzS = builder44.withProperty(zzdfVar44.zzb()).build();
        FieldDescriptor.Builder builder45 = FieldDescriptor.builder("aggregatedOnDeviceObjectInferenceLogEvent");
        zzdf zzdfVar45 = new zzdf();
        zzdfVar45.zza(35);
        zzT = builder45.withProperty(zzdfVar45.zzb()).build();
        FieldDescriptor.Builder builder46 = FieldDescriptor.builder("aggregatedOnDeviceTextDetectionLogEvent");
        zzdf zzdfVar46 = new zzdf();
        zzdfVar46.zza(36);
        zzU = builder46.withProperty(zzdfVar46.zzb()).build();
        FieldDescriptor.Builder builder47 = FieldDescriptor.builder("aggregatedOnDevicePoseDetectionLogEvent");
        zzdf zzdfVar47 = new zzdf();
        zzdfVar47.zza(46);
        zzV = builder47.withProperty(zzdfVar47.zzb()).build();
        FieldDescriptor.Builder builder48 = FieldDescriptor.builder("aggregatedOnDeviceSegmentationLogEvent");
        zzdf zzdfVar48 = new zzdf();
        zzdfVar48.zza(47);
        zzW = builder48.withProperty(zzdfVar48.zzb()).build();
        FieldDescriptor.Builder builder49 = FieldDescriptor.builder("pipelineAccelerationInferenceEvents");
        zzdf zzdfVar49 = new zzdf();
        zzdfVar49.zza(69);
        zzX = builder49.withProperty(zzdfVar49.zzb()).build();
        FieldDescriptor.Builder builder50 = FieldDescriptor.builder("remoteConfigLogEvent");
        zzdf zzdfVar50 = new zzdf();
        zzdfVar50.zza(42);
        zzY = builder50.withProperty(zzdfVar50.zzb()).build();
        FieldDescriptor.Builder builder51 = FieldDescriptor.builder("inputImageConstructionLogEvent");
        zzdf zzdfVar51 = new zzdf();
        zzdfVar51.zza(50);
        zzZ = builder51.withProperty(zzdfVar51.zzb()).build();
        FieldDescriptor.Builder builder52 = FieldDescriptor.builder("leakedHandleEvent");
        zzdf zzdfVar52 = new zzdf();
        zzdfVar52.zza(51);
        zzaa = builder52.withProperty(zzdfVar52.zzb()).build();
        FieldDescriptor.Builder builder53 = FieldDescriptor.builder("cameraSourceLogEvent");
        zzdf zzdfVar53 = new zzdf();
        zzdfVar53.zza(52);
        zzab = builder53.withProperty(zzdfVar53.zzb()).build();
        FieldDescriptor.Builder builder54 = FieldDescriptor.builder("imageLabelOptionalModuleLogEvent");
        zzdf zzdfVar54 = new zzdf();
        zzdfVar54.zza(53);
        zzac = builder54.withProperty(zzdfVar54.zzb()).build();
        FieldDescriptor.Builder builder55 = FieldDescriptor.builder("languageIdentificationOptionalModuleLogEvent");
        zzdf zzdfVar55 = new zzdf();
        zzdfVar55.zza(54);
        zzad = builder55.withProperty(zzdfVar55.zzb()).build();
        FieldDescriptor.Builder builder56 = FieldDescriptor.builder("faceDetectionOptionalModuleLogEvent");
        zzdf zzdfVar56 = new zzdf();
        zzdfVar56.zza(60);
        zzae = builder56.withProperty(zzdfVar56.zzb()).build();
        FieldDescriptor.Builder builder57 = FieldDescriptor.builder("nlClassifierOptionalModuleLogEvent");
        zzdf zzdfVar57 = new zzdf();
        zzdfVar57.zza(55);
        zzaf = builder57.withProperty(zzdfVar57.zzb()).build();
        FieldDescriptor.Builder builder58 = FieldDescriptor.builder("nlClassifierClientLibraryLogEvent");
        zzdf zzdfVar58 = new zzdf();
        zzdfVar58.zza(56);
        zzag = builder58.withProperty(zzdfVar58.zzb()).build();
        FieldDescriptor.Builder builder59 = FieldDescriptor.builder("accelerationAllowlistLogEvent");
        zzdf zzdfVar59 = new zzdf();
        zzdfVar59.zza(57);
        zzah = builder59.withProperty(zzdfVar59.zzb()).build();
        FieldDescriptor.Builder builder60 = FieldDescriptor.builder("toxicityDetectionCreateEvent");
        zzdf zzdfVar60 = new zzdf();
        zzdfVar60.zza(62);
        zzai = builder60.withProperty(zzdfVar60.zzb()).build();
        FieldDescriptor.Builder builder61 = FieldDescriptor.builder("toxicityDetectionLoadEvent");
        zzdf zzdfVar61 = new zzdf();
        zzdfVar61.zza(63);
        zzaj = builder61.withProperty(zzdfVar61.zzb()).build();
        FieldDescriptor.Builder builder62 = FieldDescriptor.builder("toxicityDetectionInferenceEvent");
        zzdf zzdfVar62 = new zzdf();
        zzdfVar62.zza(64);
        zzak = builder62.withProperty(zzdfVar62.zzb()).build();
        FieldDescriptor.Builder builder63 = FieldDescriptor.builder("barcodeDetectionOptionalModuleLogEvent");
        zzdf zzdfVar63 = new zzdf();
        zzdfVar63.zza(65);
        zzal = builder63.withProperty(zzdfVar63.zzb()).build();
        FieldDescriptor.Builder builder64 = FieldDescriptor.builder("customImageLabelOptionalModuleLogEvent");
        zzdf zzdfVar64 = new zzdf();
        zzdfVar64.zza(66);
        zzam = builder64.withProperty(zzdfVar64.zzb()).build();
        FieldDescriptor.Builder builder65 = FieldDescriptor.builder("codeScannerScanApiEvent");
        zzdf zzdfVar65 = new zzdf();
        zzdfVar65.zza(67);
        zzan = builder65.withProperty(zzdfVar65.zzb()).build();
        FieldDescriptor.Builder builder66 = FieldDescriptor.builder("codeScannerOptionalModuleEvent");
        zzdf zzdfVar66 = new zzdf();
        zzdfVar66.zza(68);
        zzao = builder66.withProperty(zzdfVar66.zzb()).build();
    }

    private zzgx() {
    }

    @Override // com.google.firebase.encoders.Encoder
    public final /* bridge */ /* synthetic */ void encode(Object obj, ObjectEncoderContext objectEncoderContext) throws IOException {
        zzkn zzknVar = (zzkn) obj;
        ObjectEncoderContext objectEncoderContext2 = objectEncoderContext;
        objectEncoderContext2.add(zzb, zzknVar.zzf());
        objectEncoderContext2.add(zzc, zzknVar.zzc());
        objectEncoderContext2.add(zzd, (Object) null);
        objectEncoderContext2.add(zze, zzknVar.zzb());
        objectEncoderContext2.add(zzf, (Object) null);
        objectEncoderContext2.add(zzg, (Object) null);
        objectEncoderContext2.add(zzh, (Object) null);
        objectEncoderContext2.add(zzi, (Object) null);
        objectEncoderContext2.add(zzj, (Object) null);
        objectEncoderContext2.add(zzk, (Object) null);
        objectEncoderContext2.add(zzl, (Object) null);
        objectEncoderContext2.add(zzm, zzknVar.zzd());
        objectEncoderContext2.add(zzn, zzknVar.zze());
        objectEncoderContext2.add(zzo, (Object) null);
        objectEncoderContext2.add(zzp, (Object) null);
        objectEncoderContext2.add(zzq, (Object) null);
        objectEncoderContext2.add(zzr, (Object) null);
        objectEncoderContext2.add(zzs, (Object) null);
        objectEncoderContext2.add(zzt, (Object) null);
        objectEncoderContext2.add(zzu, (Object) null);
        objectEncoderContext2.add(zzv, (Object) null);
        objectEncoderContext2.add(zzw, (Object) null);
        objectEncoderContext2.add(zzx, (Object) null);
        objectEncoderContext2.add(zzy, (Object) null);
        objectEncoderContext2.add(zzz, (Object) null);
        objectEncoderContext2.add(zzA, (Object) null);
        objectEncoderContext2.add(zzB, (Object) null);
        objectEncoderContext2.add(zzC, (Object) null);
        objectEncoderContext2.add(zzD, (Object) null);
        objectEncoderContext2.add(zzE, (Object) null);
        objectEncoderContext2.add(zzF, (Object) null);
        objectEncoderContext2.add(zzG, (Object) null);
        objectEncoderContext2.add(zzH, (Object) null);
        objectEncoderContext2.add(zzI, (Object) null);
        objectEncoderContext2.add(zzJ, (Object) null);
        objectEncoderContext2.add(zzK, (Object) null);
        objectEncoderContext2.add(zzL, (Object) null);
        objectEncoderContext2.add(zzM, (Object) null);
        objectEncoderContext2.add(zzN, (Object) null);
        objectEncoderContext2.add(zzO, (Object) null);
        objectEncoderContext2.add(zzP, (Object) null);
        objectEncoderContext2.add(zzQ, (Object) null);
        objectEncoderContext2.add(zzR, zzknVar.zza());
        objectEncoderContext2.add(zzS, (Object) null);
        objectEncoderContext2.add(zzT, (Object) null);
        objectEncoderContext2.add(zzU, (Object) null);
        objectEncoderContext2.add(zzV, (Object) null);
        objectEncoderContext2.add(zzW, (Object) null);
        objectEncoderContext2.add(zzX, (Object) null);
        objectEncoderContext2.add(zzY, (Object) null);
        objectEncoderContext2.add(zzZ, (Object) null);
        objectEncoderContext2.add(zzaa, (Object) null);
        objectEncoderContext2.add(zzab, (Object) null);
        objectEncoderContext2.add(zzac, (Object) null);
        objectEncoderContext2.add(zzad, (Object) null);
        objectEncoderContext2.add(zzae, (Object) null);
        objectEncoderContext2.add(zzaf, (Object) null);
        objectEncoderContext2.add(zzag, (Object) null);
        objectEncoderContext2.add(zzah, (Object) null);
        objectEncoderContext2.add(zzai, (Object) null);
        objectEncoderContext2.add(zzaj, (Object) null);
        objectEncoderContext2.add(zzak, (Object) null);
        objectEncoderContext2.add(zzal, (Object) null);
        objectEncoderContext2.add(zzam, (Object) null);
        objectEncoderContext2.add(zzan, (Object) null);
        objectEncoderContext2.add(zzao, (Object) null);
    }
}
