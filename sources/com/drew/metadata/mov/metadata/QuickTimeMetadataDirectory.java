package com.drew.metadata.mov.metadata;

import androidx.exifinterface.media.ExifInterface;
import com.clevertap.android.sdk.Constants;
import com.drew.metadata.exif.makernotes.LeicaType5MakernoteDirectory;
import com.drew.metadata.mov.QuickTimeDirectory;
import com.drew.metadata.photoshop.PhotoshopDirectory;
import com.google.api.ResourceProto;
import java.util.HashMap;

/* loaded from: classes5.dex */
public class QuickTimeMetadataDirectory extends QuickTimeDirectory {
    public static final int TAG_ALBUM = 1280;
    public static final int TAG_ARTIST = 1281;
    public static final int TAG_ARTWORK = 1282;
    public static final int TAG_AUTHOR = 1283;
    public static final int TAG_COLLECTION_USER = 1298;
    public static final int TAG_COMMENT = 1284;
    public static final int TAG_CONTENT_IDENTIFIER = 1308;
    public static final int TAG_COPYRIGHT = 1285;
    public static final int TAG_CREATION_DATE = 1286;
    public static final int TAG_DESCRIPTION = 1287;
    public static final int TAG_DIRECTION_FACING = 1305;
    public static final int TAG_DIRECTION_MOTION = 1306;
    public static final int TAG_DIRECTOR = 1288;
    public static final int TAG_DISPLAY_NAME = 1307;
    public static final int TAG_GENRE = 1290;
    public static final int TAG_INFORMATION = 1291;
    public static final int TAG_KEYWORDS = 1292;
    public static final int TAG_LOCATION_BODY = 1301;
    public static final int TAG_LOCATION_DATE = 1304;
    public static final int TAG_LOCATION_ISO6709 = 1293;
    public static final int TAG_LOCATION_NAME = 1300;
    public static final int TAG_LOCATION_NOTE = 1302;
    public static final int TAG_LOCATION_ROLE = 1303;
    public static final int TAG_MAKE = 1309;
    public static final int TAG_MODEL = 1310;
    public static final int TAG_ORIGINATING_SIGNATURE = 1311;
    public static final int TAG_PIXEL_DENSITY = 1312;
    public static final int TAG_PRODUCER = 1294;
    public static final int TAG_PUBLISHER = 1295;
    public static final int TAG_RATING_USER = 1299;
    public static final int TAG_SOFTWARE = 1296;
    public static final int TAG_TITLE = 1289;
    public static final int TAG_YEAR = 1297;
    protected static final HashMap<String, Integer> _tagIntegerMap;
    protected static final HashMap<Integer, String> _tagNameMap;

    @Override // com.drew.metadata.mov.QuickTimeDirectory, com.drew.metadata.Directory
    public String getName() {
        return "QuickTime Metadata";
    }

    @Override // com.drew.metadata.mov.QuickTimeDirectory, com.drew.metadata.Directory
    protected HashMap<Integer, String> getTagNameMap() {
        return _tagNameMap;
    }

    public QuickTimeMetadataDirectory() {
        setDescriptor(new QuickTimeMetadataDescriptor(this));
    }

    static {
        HashMap<Integer, String> map = new HashMap<>();
        _tagNameMap = map;
        HashMap<String, Integer> map2 = new HashMap<>();
        _tagIntegerMap = map2;
        map2.put("com.apple.quicktime.album", 1280);
        map2.put("com.apple.quicktime.artist", 1281);
        map2.put("com.apple.quicktime.artwork", 1282);
        map2.put("com.apple.quicktime.author", 1283);
        map2.put("com.apple.quicktime.comment", 1284);
        map2.put("com.apple.quicktime.copyright", 1285);
        map2.put("com.apple.quicktime.creationdate", 1286);
        map2.put("com.apple.quicktime.description", 1287);
        Integer numValueOf = Integer.valueOf(TAG_DIRECTOR);
        map2.put("com.apple.quicktime.director", numValueOf);
        map2.put("com.apple.quicktime.title", 1289);
        map2.put("com.apple.quicktime.genre", 1290);
        map2.put("com.apple.quicktime.information", 1291);
        map2.put("com.apple.quicktime.keywords", 1292);
        map2.put("com.apple.quicktime.location.ISO6709", 1293);
        Integer numValueOf2 = Integer.valueOf(TAG_PRODUCER);
        map2.put("com.apple.quicktime.producer", numValueOf2);
        map2.put("com.apple.quicktime.publisher", 1295);
        map2.put("com.apple.quicktime.software", Integer.valueOf(TAG_SOFTWARE));
        map2.put("com.apple.quicktime.year", Integer.valueOf(TAG_YEAR));
        map2.put("com.apple.quicktime.collection.user", Integer.valueOf(TAG_COLLECTION_USER));
        map2.put("com.apple.quicktime.rating.user", 1299);
        map2.put("com.apple.quicktime.location.name", 1300);
        map2.put("com.apple.quicktime.location.body", Integer.valueOf(TAG_LOCATION_BODY));
        map2.put("com.apple.quicktime.location.note", Integer.valueOf(TAG_LOCATION_NOTE));
        map2.put("com.apple.quicktime.location.role", Integer.valueOf(TAG_LOCATION_ROLE));
        map2.put("com.apple.quicktime.location.date", Integer.valueOf(TAG_LOCATION_DATE));
        map2.put("com.apple.quicktime.direction.facing", Integer.valueOf(TAG_DIRECTION_FACING));
        map2.put("com.apple.quicktime.direction.motion", Integer.valueOf(TAG_DIRECTION_MOTION));
        map2.put("com.apple.quicktime.displayname", Integer.valueOf(TAG_DISPLAY_NAME));
        map2.put("com.apple.quicktime.content.identifier", Integer.valueOf(TAG_CONTENT_IDENTIFIER));
        map2.put("com.apple.quicktime.make", Integer.valueOf(TAG_MAKE));
        map2.put("com.apple.quicktime.model", Integer.valueOf(TAG_MODEL));
        map2.put("com.apple.photos.originating.signature", Integer.valueOf(TAG_ORIGINATING_SIGNATURE));
        map2.put("com.apple.quicktime.pixeldensity", 1312);
        map2.put("----", 1024);
        map2.put("@PST", 1025);
        map2.put("@ppi", Integer.valueOf(PhotoshopDirectory.TAG_LAYERS_GROUP_INFORMATION));
        map2.put("@pti", 1027);
        map2.put("@sti", 1028);
        map2.put("AACR", 1029);
        map2.put("CDEK", 1030);
        map2.put("CDET", Integer.valueOf(LeicaType5MakernoteDirectory.TagOriginalFileName));
        map2.put("GUID", 1032);
        map2.put("VERS", Integer.valueOf(PhotoshopDirectory.TAG_THUMBNAIL_OLD));
        map2.put("aART", Integer.valueOf(PhotoshopDirectory.TAG_COPYRIGHT));
        map2.put("akID", Integer.valueOf(PhotoshopDirectory.TAG_URL));
        map2.put("albm", Integer.valueOf(PhotoshopDirectory.TAG_THUMBNAIL));
        map2.put("apID", 1037);
        map2.put("atID", 1038);
        map2.put(Constants.AUTH, Integer.valueOf(PhotoshopDirectory.TAG_ICC_PROFILE_BYTES));
        map2.put("catg", 1040);
        map2.put("cnID", Integer.valueOf(PhotoshopDirectory.TAG_ICC_UNTAGGED_PROFILE));
        map2.put("covr", 1042);
        map2.put("cpil", 1043);
        map2.put("cprt", Integer.valueOf(PhotoshopDirectory.TAG_SEED_NUMBER));
        map2.put("desc", Integer.valueOf(PhotoshopDirectory.TAG_UNICODE_ALPHA_NAMES));
        map2.put("disk", Integer.valueOf(PhotoshopDirectory.TAG_INDEXED_COLOR_TABLE_COUNT));
        map2.put("dscp", Integer.valueOf(PhotoshopDirectory.TAG_TRANSPARENCY_INDEX));
        map2.put("egid", 1048);
        map2.put("geID", 1049);
        map2.put("gnre", 1050);
        map2.put("grup", 1051);
        map2.put("gshh", 1052);
        map2.put("gspm", 1053);
        map2.put("gspu", Integer.valueOf(PhotoshopDirectory.TAG_URL_LIST));
        map2.put("gssd", Integer.valueOf(ResourceProto.RESOURCE_REFERENCE_FIELD_NUMBER));
        map2.put("gsst", 1056);
        map2.put("gstd", Integer.valueOf(PhotoshopDirectory.TAG_VERSION));
        map2.put("hdvd", Integer.valueOf(PhotoshopDirectory.TAG_EXIF_DATA_1));
        map2.put("itnu", Integer.valueOf(PhotoshopDirectory.TAG_EXIF_DATA_3));
        map2.put("keyw", Integer.valueOf(PhotoshopDirectory.TAG_XMP_DATA));
        map2.put("ldes", Integer.valueOf(PhotoshopDirectory.TAG_CAPTION_DIGEST));
        map2.put("pcst", Integer.valueOf(PhotoshopDirectory.TAG_PRINT_SCALE));
        map2.put("perf", 1063);
        map2.put("pgap", Integer.valueOf(PhotoshopDirectory.TAG_PIXEL_ASPECT_RATIO));
        map2.put("plID", Integer.valueOf(PhotoshopDirectory.TAG_LAYER_COMPS));
        map2.put("prID", Integer.valueOf(PhotoshopDirectory.TAG_ALTERNATE_DUOTONE_COLORS));
        map2.put("purd", Integer.valueOf(PhotoshopDirectory.TAG_ALTERNATE_SPOT_COLORS));
        map2.put("purl", 1068);
        map2.put("rate", Integer.valueOf(PhotoshopDirectory.TAG_LAYER_SELECTION_IDS));
        map2.put("rldt", Integer.valueOf(PhotoshopDirectory.TAG_HDR_TONING_INFO));
        map2.put("rtng", Integer.valueOf(PhotoshopDirectory.TAG_PRINT_INFO));
        map2.put("sfID", Integer.valueOf(PhotoshopDirectory.TAG_LAYER_GROUPS_ENABLED_ID));
        map2.put("soaa", Integer.valueOf(PhotoshopDirectory.TAG_COLOR_SAMPLERS));
        map2.put("soal", Integer.valueOf(PhotoshopDirectory.TAG_MEASUREMENT_SCALE));
        map2.put("soar", Integer.valueOf(PhotoshopDirectory.TAG_TIMELINE_INFORMATION));
        map2.put("soco", Integer.valueOf(PhotoshopDirectory.TAG_SHEET_DISCLOSURE));
        map2.put("sonm", Integer.valueOf(PhotoshopDirectory.TAG_DISPLAY_INFO));
        map2.put("sosn", Integer.valueOf(PhotoshopDirectory.TAG_ONION_SKINS));
        map2.put("stik", 1079);
        map2.put("titl", Integer.valueOf(PhotoshopDirectory.TAG_COUNT_INFORMATION));
        map2.put("tmpo", 1081);
        map2.put("trkn", Integer.valueOf(PhotoshopDirectory.TAG_PRINT_INFO_2));
        map2.put("tven", Integer.valueOf(PhotoshopDirectory.TAG_PRINT_STYLE));
        map2.put("tves", Integer.valueOf(PhotoshopDirectory.TAG_MAC_NSPRINTINFO));
        map2.put("tvnn", Integer.valueOf(PhotoshopDirectory.TAG_WIN_DEVMODE));
        map2.put("tvsh", Integer.valueOf(PhotoshopDirectory.TAG_AUTO_SAVE_FILE_PATH));
        map2.put("tvsn", Integer.valueOf(PhotoshopDirectory.TAG_AUTO_SAVE_FORMAT));
        map2.put("yrrc", Integer.valueOf(PhotoshopDirectory.TAG_PATH_SELECTION_STATE));
        map2.put("�ART", 1089);
        map2.put("�alb", 1090);
        map2.put("�cmt", 1091);
        map2.put("�com", 1092);
        map2.put("�cpy", 1093);
        map2.put("�day", 1094);
        map2.put("�des", 1095);
        map2.put("�enc", 1096);
        map2.put("�gen", 1097);
        map2.put("�grp", 1098);
        map2.put("�lyr", 1099);
        map2.put("�nam", 1100);
        map2.put("�nrt", 1101);
        map2.put("�pub", 1102);
        map2.put("�too", 1103);
        map2.put("�trk", 1104);
        map2.put("�wrt", 1105);
        map.put(1280, "Album");
        map.put(1281, ExifInterface.TAG_ARTIST);
        map.put(1282, "Artwork");
        map.put(1283, "Author");
        map.put(1284, "Comment");
        map.put(1285, ExifInterface.TAG_COPYRIGHT);
        map.put(1286, "Creation Date");
        map.put(1287, "Description");
        map.put(numValueOf, "Director");
        map.put(1289, "Title");
        map.put(1290, "Genre");
        map.put(1291, "Information");
        map.put(1292, "Keywords");
        map.put(1293, "ISO 6709");
        map.put(numValueOf2, "Producer");
        map.put(1295, "Publisher");
        map.put(Integer.valueOf(TAG_SOFTWARE), ExifInterface.TAG_SOFTWARE);
        map.put(Integer.valueOf(TAG_YEAR), "Year");
        map.put(Integer.valueOf(TAG_COLLECTION_USER), "Collection User");
        map.put(1299, "Rating User");
        map.put(1300, "Location Name");
        map.put(Integer.valueOf(TAG_LOCATION_BODY), "Location Body");
        map.put(Integer.valueOf(TAG_LOCATION_NOTE), "Location Note");
        map.put(Integer.valueOf(TAG_LOCATION_ROLE), "Location Role");
        map.put(Integer.valueOf(TAG_LOCATION_DATE), "Location Date");
        map.put(Integer.valueOf(TAG_DIRECTION_FACING), "Direction Facing");
        map.put(Integer.valueOf(TAG_DIRECTION_MOTION), "Direction Motion");
        map.put(Integer.valueOf(TAG_DISPLAY_NAME), "Display Name");
        map.put(Integer.valueOf(TAG_CONTENT_IDENTIFIER), "Content Identifier");
        map.put(Integer.valueOf(TAG_MAKE), ExifInterface.TAG_MAKE);
        map.put(Integer.valueOf(TAG_MODEL), ExifInterface.TAG_MODEL);
        map.put(Integer.valueOf(TAG_ORIGINATING_SIGNATURE), "Originating Signature");
        map.put(1312, "Pixel Density");
        map.put(1024, "iTunes Info");
        map.put(1025, "Parent Short Title");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_LAYERS_GROUP_INFORMATION), "Parent Product ID");
        map.put(1027, "Parent Title");
        map.put(1028, "Short Title");
        map.put(1029, "Unknown_AACR?");
        map.put(1030, "Unknown_CDEK?");
        map.put(Integer.valueOf(LeicaType5MakernoteDirectory.TagOriginalFileName), "Unknown_CDET?");
        map.put(1032, "GUID");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_THUMBNAIL_OLD), "Product Version");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_COPYRIGHT), "Album Artist");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_URL), "Apple Store Account Type");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_THUMBNAIL), "Album");
        map.put(1037, "Apple Store Account");
        map.put(1038, "Album Title ID");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_ICC_PROFILE_BYTES), "Author");
        map.put(1040, "Category");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_ICC_UNTAGGED_PROFILE), "Apple Store Catalog ID");
        map.put(1042, "Cover Art");
        map.put(1043, "Compilation");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_SEED_NUMBER), ExifInterface.TAG_COPYRIGHT);
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_UNICODE_ALPHA_NAMES), "Description");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_INDEXED_COLOR_TABLE_COUNT), "Disk Number");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_TRANSPARENCY_INDEX), "Description");
        map.put(1048, "Episode Global Unique ID");
        map.put(1049, "Genre ID");
        map.put(1050, "Genre");
        map.put(1051, "Grouping");
        map.put(1052, "Google Host Header");
        map.put(1053, "Google Ping Message");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_URL_LIST), "Google Ping URL");
        map.put(Integer.valueOf(ResourceProto.RESOURCE_REFERENCE_FIELD_NUMBER), "Google Source Data");
        map.put(1056, "Google Start Time");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_VERSION), "Google Track Duration");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_EXIF_DATA_1), "HD Video");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_EXIF_DATA_3), "iTunes U");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_XMP_DATA), "Keyword");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_CAPTION_DIGEST), "Long Description");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_PRINT_SCALE), "Podcast");
        map.put(1063, "Performer");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_PIXEL_ASPECT_RATIO), "Play Gap");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_LAYER_COMPS), "Play List ID");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_ALTERNATE_DUOTONE_COLORS), "Product ID");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_ALTERNATE_SPOT_COLORS), "Purchase Date");
        map.put(1068, "Podcast URL");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_LAYER_SELECTION_IDS), "Rating Percent");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_HDR_TONING_INFO), "Release Date");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_PRINT_INFO), "Rating");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_LAYER_GROUPS_ENABLED_ID), "Apple Store Country");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_COLOR_SAMPLERS), "Sort Album Artist");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_MEASUREMENT_SCALE), "Sort Album");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_TIMELINE_INFORMATION), "Sort Artist");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_SHEET_DISCLOSURE), "Sort Composer");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_DISPLAY_INFO), "Sort Name");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_ONION_SKINS), "Sort Show");
        map.put(1079, "Media Type");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_COUNT_INFORMATION), "Title");
        map.put(1081, "Beats Per Minute");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_PRINT_INFO_2), "Track Number");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_PRINT_STYLE), "TV Episode ID");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_MAC_NSPRINTINFO), "TV Episode");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_WIN_DEVMODE), "TV Network Name");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_AUTO_SAVE_FILE_PATH), "TV Show");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_AUTO_SAVE_FORMAT), "TV Season");
        map.put(Integer.valueOf(PhotoshopDirectory.TAG_PATH_SELECTION_STATE), "Year");
        map.put(1089, ExifInterface.TAG_ARTIST);
        map.put(1090, "Album");
        map.put(1091, "Comment");
        map.put(1092, "Composer");
        map.put(1093, ExifInterface.TAG_COPYRIGHT);
        map.put(1094, "Content Create Date");
        map.put(1095, "Description");
        map.put(1096, "Encoded By");
        map.put(1097, "Genre");
        map.put(1098, "Grouping");
        map.put(1099, "Lyrics");
        map.put(1100, "Title");
        map.put(1101, "Narrator");
        map.put(1102, "Publisher");
        map.put(1103, "Encoder");
        map.put(1104, "Track");
        map.put(1105, "Composer");
    }
}
