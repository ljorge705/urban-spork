package org.bouncycastle.oer.its.template.ieee1609dot2.basetypes;

import com.clevertap.android.sdk.Constants;
import com.clevertap.android.sdk.product_config.CTProductConfigConstants;
import com.facebook.react.uimanager.ViewProps;
import com.onfido.android.sdk.capture.config.MediaCallbackResultReceiver;
import io.sentry.protocol.Geo;
import java.math.BigInteger;
import okhttp3.internal.ws.WebSocketProtocol;
import org.bouncycastle.asn1.ASN1Integer;
import org.bouncycastle.oer.OERDefinition;

/* loaded from: classes4.dex */
public class Ieee1609Dot2BaseTypes {
    public static final OERDefinition.Builder BasePublicEncryptionKey;
    public static final OERDefinition.Builder BitmapSsp;
    public static final OERDefinition.Builder BitmapSspRange;
    public static final OERDefinition.Builder CircularRegion;
    public static final OERDefinition.Builder CountryAndRegions;
    public static final OERDefinition.Builder CountryAndSubregions;
    public static final OERDefinition.Builder CountryOnly;
    public static final OERDefinition.Builder CrlSeries;
    public static final OERDefinition.Builder Duration;
    public static final OERDefinition.Builder EccP256CurvePoint;
    public static final OERDefinition.Builder EccP384CurvePoint;
    public static final OERDefinition.Builder EcdsaP256Signature;
    public static final OERDefinition.Builder EcdsaP384Signature;
    public static final OERDefinition.Builder EciesP256EncryptedKey;
    public static final OERDefinition.Builder Elevation;
    public static final OERDefinition.Builder EncryptionKey;
    public static final OERDefinition.Builder GeographicRegion;
    public static final OERDefinition.Builder GroupLinkageValue;
    public static final OERDefinition.Builder HashAlgorithm;
    public static final OERDefinition.Builder HashedId10;
    public static final OERDefinition.Builder HashedId3;
    public static final OERDefinition.Builder HashedId32;
    public static final OERDefinition.Builder HashedId8;
    public static final OERDefinition.Builder Hostname;
    public static final OERDefinition.Builder IValue;
    public static final OERDefinition.Builder IdentifiedRegion;
    public static final OERDefinition.Builder KnownLatitude;
    public static final OERDefinition.Builder KnownLongitude;
    public static final OERDefinition.Builder LaId;
    public static final OERDefinition.Builder Latitude;
    public static final OERDefinition.Builder LinkageSeed;
    public static final OERDefinition.Builder LinkageValue;
    public static final OERDefinition.Builder Longitude;
    public static final OERDefinition.Builder NinetyDegreeInt;
    public static final OERDefinition.Builder OneEightyDegreeInt;
    public static final OERDefinition.Builder Point256;
    public static final OERDefinition.Builder Point384;
    public static final OERDefinition.Builder PolygonalRegion;
    public static final OERDefinition.Builder Psid;
    public static final OERDefinition.Builder PsidSsp;
    public static final OERDefinition.Builder PsidSspRange;
    public static final OERDefinition.Builder PublicEncryptionKey;
    public static final OERDefinition.Builder PublicVerificationKey;
    public static final OERDefinition.Builder RectangularRegion;
    public static final OERDefinition.Builder RegionAndSubregions;
    public static final OERDefinition.Builder SequenceOfHashedId3;
    public static final OERDefinition.Builder SequenceOfHashedId8;
    public static final OERDefinition.Builder SequenceOfIdentifiedRegion;
    public static final OERDefinition.Builder SequenceOfOctetString;
    public static final OERDefinition.Builder SequenceOfPsid;
    public static final OERDefinition.Builder SequenceOfPsidSsp;
    public static final OERDefinition.Builder SequenceOfPsidSspRange;
    public static final OERDefinition.Builder SequenceOfRectangularRegion;
    public static final OERDefinition.Builder SequenceOfRegionAndSubregions;
    public static final OERDefinition.Builder SequenceOfUint16;
    public static final OERDefinition.Builder SequenceOfUint8;
    public static final OERDefinition.Builder ServiceSpecificPermissions;
    public static final OERDefinition.Builder Signature;
    public static final OERDefinition.Builder SspRange;
    public static final OERDefinition.Builder SubjectAssurance;
    public static final OERDefinition.Builder SymmAlgorithm;
    public static final OERDefinition.Builder SymmetricEncryptionKey;
    public static final OERDefinition.Builder ThreeDLocation;
    public static final OERDefinition.Builder Time32;
    public static final OERDefinition.Builder Time64;
    public static final OERDefinition.Builder TwoDLocation;
    public static final OERDefinition.Builder UINT16;
    public static final OERDefinition.Builder UINT3 = OERDefinition.integer(0, 7).typeName("UINT3");
    public static final OERDefinition.Builder UINT32;
    public static final OERDefinition.Builder UINT64;
    public static final OERDefinition.Builder UINT8;
    public static final OERDefinition.Builder UnknownLatitude;
    public static final OERDefinition.Builder UnknownLongitude;
    public static final OERDefinition.Builder ValidityPeriod;

    static {
        OERDefinition.Builder builderTypeName = OERDefinition.integer(0L, 255L).typeName("UINT8");
        UINT8 = builderTypeName;
        OERDefinition.Builder builderTypeName2 = OERDefinition.integer(0L, WebSocketProtocol.PAYLOAD_SHORT_MAX).typeName("UINT16");
        UINT16 = builderTypeName2;
        OERDefinition.Builder builderTypeName3 = OERDefinition.integer(0L, 4294967295L).typeName("UINT32");
        UINT32 = builderTypeName3;
        OERDefinition.Builder builderTypeName4 = OERDefinition.integer(BigInteger.ZERO, new BigInteger("18446744073709551615")).typeName("UINT64");
        UINT64 = builderTypeName4;
        OERDefinition.Builder builderTypeName5 = OERDefinition.seqof(builderTypeName2).typeName("SequenceOfUint16");
        SequenceOfUint16 = builderTypeName5;
        OERDefinition.Builder builderTypeName6 = OERDefinition.seqof(builderTypeName).typeName("SequenceOfUint8");
        SequenceOfUint8 = builderTypeName6;
        OERDefinition.Builder builderTypeName7 = OERDefinition.octets(3).typeName("HashedId3");
        HashedId3 = builderTypeName7;
        OERDefinition.Builder builderTypeName8 = OERDefinition.octets(8).typeName("HashedId8");
        HashedId8 = builderTypeName8;
        HashedId10 = OERDefinition.octets(10).typeName("HashedId10");
        HashedId32 = OERDefinition.octets(32).typeName("HashedId32");
        SequenceOfHashedId3 = OERDefinition.seqof(builderTypeName7).typeName("SequenceOfHashedId3");
        SequenceOfHashedId8 = OERDefinition.seqof(builderTypeName8).typeName("SequenceOfHashedId8");
        OERDefinition.Builder builderTypeName9 = builderTypeName3.typeName("Time32");
        Time32 = builderTypeName9;
        Time64 = builderTypeName4.typeName("Time64");
        OERDefinition.Builder builderTypeName10 = OERDefinition.choice(builderTypeName2.label("microseconds"), builderTypeName2.label("milliseconds"), builderTypeName2.label("seconds"), builderTypeName2.label("minutes"), builderTypeName2.label("hours"), builderTypeName2.label("sixtyHours"), builderTypeName2.label("years")).typeName("Duration");
        Duration = builderTypeName10;
        ValidityPeriod = OERDefinition.seq(builderTypeName9.label(ViewProps.START), builderTypeName10.label("duration")).typeName("ValidityPeriod");
        IValue = builderTypeName2.copy().typeName("IValue");
        Hostname = OERDefinition.utf8String(0, 255).typeName("Hostname");
        LinkageValue = OERDefinition.octets(9).typeName("LinkageValue");
        GroupLinkageValue = OERDefinition.seq(OERDefinition.octets(4).label("jValue"), OERDefinition.octets(9).label("value")).typeName("GroupLinkageValue");
        LaId = OERDefinition.octets(2).typeName("LaId");
        LinkageSeed = OERDefinition.octets(16).typeName("LinkageSeed");
        OERDefinition.Builder builderTypeName11 = OERDefinition.seq(OERDefinition.octets(32).label("x"), OERDefinition.octets(32).label("y")).typeName("Point256");
        Point256 = builderTypeName11;
        OERDefinition.Builder builderTypeName12 = OERDefinition.choice(OERDefinition.octets(32).label("x-only"), OERDefinition.nullValue().label("fill"), OERDefinition.octets(32).label("compressed-y-0"), OERDefinition.octets(32).label("compressed-y-1"), builderTypeName11.label("uncompressedP256")).typeName("EccP256CurvePoint");
        EccP256CurvePoint = builderTypeName12;
        OERDefinition.Builder builderTypeName13 = OERDefinition.seq(builderTypeName12.label("rSig"), OERDefinition.octets(32).label("sSig")).typeName("EcdsaP256Signature");
        EcdsaP256Signature = builderTypeName13;
        OERDefinition.Builder builderTypeName14 = OERDefinition.seq(OERDefinition.octets(48).label("x"), OERDefinition.octets(48).label("y")).typeName("Point384");
        Point384 = builderTypeName14;
        OERDefinition.Builder builderTypeName15 = OERDefinition.choice(OERDefinition.octets(48).label("x-only"), OERDefinition.nullValue().label("fill"), OERDefinition.octets(48).label("compressed-y-0"), OERDefinition.octets(48).label("compressed-y-1"), builderTypeName14.label("uncompressedP384")).typeName("EccP384CurvePoint");
        EccP384CurvePoint = builderTypeName15;
        OERDefinition.Builder builderTypeName16 = OERDefinition.seq(builderTypeName15.label("rSig"), OERDefinition.octets(48).label("sSig")).typeName("EcdsaP384Signature");
        EcdsaP384Signature = builderTypeName16;
        Signature = OERDefinition.choice(builderTypeName13.label("ecdsaNistP256Signature"), builderTypeName13.label("ecdsaBrainpoolP256r1Signature"), OERDefinition.extension(builderTypeName16.label("ecdsaBrainpoolP384r1Signature"))).typeName("Signature");
        OERDefinition.Builder builderTypeName17 = OERDefinition.enumeration(OERDefinition.enumItem("aes128Ccm"), OERDefinition.extension(new Object[0])).typeName("SymmAlgorithm");
        SymmAlgorithm = builderTypeName17;
        HashAlgorithm = OERDefinition.enumeration(OERDefinition.enumItem("sha256"), OERDefinition.extension(OERDefinition.enumItem("sha384"))).typeName("HashAlgorithm");
        EciesP256EncryptedKey = OERDefinition.seq(builderTypeName12.copy().label(CTProductConfigConstants.PRODUCT_CONFIG_JSON_KEY_FOR_VALUE), OERDefinition.octets(16).label("c"), OERDefinition.octets(16).label("t")).typeName("EciesP256EncryptedKey");
        OERDefinition.Builder builderTypeName18 = OERDefinition.choice(builderTypeName12.label("eciesNistP256"), builderTypeName12.label("eciesBrainpoolP256r1"), OERDefinition.extension(new Object[0])).typeName("BasePublicEncryptionKey");
        BasePublicEncryptionKey = builderTypeName18;
        OERDefinition.Builder builderTypeName19 = OERDefinition.choice(OERDefinition.octets(16).label("aes128Ccm"), OERDefinition.extension(new Object[0])).typeName("SymmetricEncryptionKey");
        SymmetricEncryptionKey = builderTypeName19;
        OERDefinition.Builder builderTypeName20 = OERDefinition.seq(builderTypeName17.label("supportedSymmAlg"), builderTypeName18.label("publicKey")).typeName("PublicEncryptionKey");
        PublicEncryptionKey = builderTypeName20;
        EncryptionKey = OERDefinition.choice(builderTypeName20.label("publicOption"), builderTypeName19.label("symmetric")).typeName("EncryptionKey");
        PublicVerificationKey = OERDefinition.choice(builderTypeName12.label("ecdsaNistP256"), builderTypeName12.label("ecdsaBrainpoolP256r1"), OERDefinition.extension(builderTypeName15.label("ecdsaBrainpoolP384r1"))).typeName("PublicVerificationKey");
        OERDefinition.Builder builderTypeName21 = OERDefinition.integer().rangeToMAXFrom(0L).typeName("Psid");
        Psid = builderTypeName21;
        OERDefinition.Builder builderTypeName22 = OERDefinition.octets(0, 31).typeName("BitmapSsp");
        BitmapSsp = builderTypeName22;
        OERDefinition.Builder builderTypeName23 = OERDefinition.choice(OERDefinition.octets().unbounded().label("opaque"), OERDefinition.extension(builderTypeName22)).typeName("ServiceSpecificPermissions");
        ServiceSpecificPermissions = builderTypeName23;
        OERDefinition.Builder builderTypeName24 = OERDefinition.seq(builderTypeName21.label("psid"), OERDefinition.optional(builderTypeName23.label("ssp"))).typeName("PsidSsp");
        PsidSsp = builderTypeName24;
        SequenceOfPsidSsp = OERDefinition.seqof(builderTypeName24).typeName("SequenceOfPsidSsp");
        SequenceOfPsid = OERDefinition.seqof(builderTypeName21).typeName("SequenceOfPsid");
        OERDefinition.Builder builderTypeName25 = OERDefinition.seqof(OERDefinition.octets().rangeToMAXFrom(0L)).typeName("SequenceOfOctetString");
        SequenceOfOctetString = builderTypeName25;
        OERDefinition.Builder builderTypeName26 = OERDefinition.seq(OERDefinition.octets(1, 32).label("sspValue"), OERDefinition.octets(1, 32).label("sspBitMask")).typeName("BitmapSspRange");
        BitmapSspRange = builderTypeName26;
        OERDefinition.Builder builderTypeName27 = OERDefinition.choice(builderTypeName25.label("opaque"), OERDefinition.nullValue().label("all"), OERDefinition.extension(builderTypeName26.label("bitmapSspRange"))).typeName("SspRange");
        SspRange = builderTypeName27;
        OERDefinition.Builder builderTypeName28 = OERDefinition.seq(builderTypeName21.label("psid"), OERDefinition.optional(builderTypeName27.label("sspRange"))).typeName("PsidSspRange");
        PsidSspRange = builderTypeName28;
        SequenceOfPsidSspRange = OERDefinition.seqof(builderTypeName28).typeName("SequenceOfPsidSspRange");
        SubjectAssurance = OERDefinition.octets(1).typeName("SubjectAssurance");
        CrlSeries = builderTypeName2.typeName("CrlSeries");
        OERDefinition.Builder builderTypeName29 = builderTypeName2.typeName("CountryOnly");
        CountryOnly = builderTypeName29;
        OERDefinition.Builder builderTypeName30 = OERDefinition.seq(builderTypeName29.label("countryOnly"), builderTypeName6.label("regions")).typeName("CountryAndRegions");
        CountryAndRegions = builderTypeName30;
        OERDefinition.Builder builderTypeName31 = OERDefinition.seq(builderTypeName.label(Geo.JsonKeys.REGION), builderTypeName5.label("subregions")).typeName("RegionAndSubregions");
        RegionAndSubregions = builderTypeName31;
        OERDefinition.Builder builderTypeName32 = OERDefinition.seqof(builderTypeName31).typeName("SequenceOfRegionAndSubregions");
        SequenceOfRegionAndSubregions = builderTypeName32;
        OERDefinition.Builder builderTypeName33 = OERDefinition.seq(builderTypeName29.label(MediaCallbackResultReceiver.KEY_COUNTRY), builderTypeName32.label("regionAndSubregions")).typeName("CountryAndSubregions");
        CountryAndSubregions = builderTypeName33;
        OERDefinition.Builder builderTypeName34 = OERDefinition.choice(builderTypeName29.label("countryOnly"), builderTypeName30.label("countryAndRegions"), builderTypeName33.label("countryAndSubregions"), OERDefinition.extension(new Object[0])).typeName("IdentifiedRegion");
        IdentifiedRegion = builderTypeName34;
        OERDefinition.Builder builderTypeName35 = OERDefinition.seqof(builderTypeName34).typeName("SequenceOfIdentifiedRegion");
        SequenceOfIdentifiedRegion = builderTypeName35;
        OERDefinition.Builder builderTypeName36 = OERDefinition.integer(-1799999999L, 1800000001L).typeName("OneEightyDegreeInt");
        OneEightyDegreeInt = builderTypeName36;
        KnownLongitude = builderTypeName36.copy().typeName("KnownLongitude");
        UnknownLongitude = OERDefinition.integer().validSwitchValue(new ASN1Integer(1800000001L)).typeName("UnknownLongitude");
        OERDefinition.Builder builderTypeName37 = OERDefinition.integer(-900000000L, 900000001L).typeName("NinetyDegreeInt");
        NinetyDegreeInt = builderTypeName37;
        KnownLatitude = builderTypeName37.copy().typeName("KnownLatitude");
        UnknownLatitude = OERDefinition.integer().validSwitchValue(new ASN1Integer(900000001L)).typeName("UnknownLatitude");
        OERDefinition.Builder builderTypeName38 = builderTypeName2.typeName("Elevation");
        Elevation = builderTypeName38;
        OERDefinition.Builder builderTypeName39 = builderTypeName36.copy().typeName(Constants.CLTAP_LONGITUDE);
        Longitude = builderTypeName39;
        OERDefinition.Builder builderTypeName40 = builderTypeName37.copy().typeName(Constants.CLTAP_LATITUDE);
        Latitude = builderTypeName40;
        ThreeDLocation = OERDefinition.seq(builderTypeName40.label("latitude"), builderTypeName39.label("longitude"), builderTypeName38.label(ViewProps.ELEVATION)).typeName("ThreeDLocation");
        OERDefinition.Builder builderTypeName41 = OERDefinition.seq(builderTypeName40.label("latitude"), builderTypeName39.label("longitude")).typeName("TwoDLocation");
        TwoDLocation = builderTypeName41;
        OERDefinition.Builder builderTypeName42 = OERDefinition.seq(builderTypeName41.label("northWest"), builderTypeName41.label("southEast")).typeName("RectangularRegion");
        RectangularRegion = builderTypeName42;
        OERDefinition.Builder builderTypeName43 = OERDefinition.seqof(builderTypeName42).typeName("SequenceOfRectangularRegion");
        SequenceOfRectangularRegion = builderTypeName43;
        OERDefinition.Builder builderTypeName44 = OERDefinition.seq(builderTypeName41.label("center"), builderTypeName2.label(Constants.KEY_RADIUS)).typeName("CircularRegion");
        CircularRegion = builderTypeName44;
        OERDefinition.Builder builderTypeName45 = OERDefinition.seqof(builderTypeName41).rangeToMAXFrom(3L).typeName("PolygonalRegion");
        PolygonalRegion = builderTypeName45;
        GeographicRegion = OERDefinition.choice(builderTypeName44.label("circularRegion"), builderTypeName43.label("rectangularRegion"), builderTypeName45.label("polygonalRegion"), builderTypeName35.label("identifiedRegion"), OERDefinition.extension(new Object[0])).typeName("GeographicRegion");
    }
}
